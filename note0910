//C like syntax
//Modern design, module, function
//Bytecode execution
argv = @import("sys").argv;

/*
Type system:
    integer(int)
    floating-number(float)
    string(str)
    boolean(bool)
    nil-type(nil)
    any-type(any)
*/
x = 20;
width = 13.45;
name = "C^ language";
no = false;
p = nil;
p = any;

print(type(x)) //int

/*
Function
*/
fn bar() { print("CALL FN"); }
    
fn fib(n int) int {
    if n < 2 return n;
    return fib(n - 1) + fib(n - 2);
}

fn max(array []int) int {
    if len(array) == 0
        return -1;
    n = array.0;
    for i = 0; i < len(array); i++ {
        if n < array.i {
            n = array.i;
        }
    }
    return n;
}

/*
Data
*/
struct Foo {
    element []any
    title str
}

fn Foo.show() {
    print(title)
}

f = Foo([1, 2, 3], "foo")
f.show()
